<div class="container-fluid d-flex" style="background-color: #D9D9D9;">
    <div class="sideMenu">
        <a href="/admin"><button type="button" class="btn btn-light sideMenuButton" ><i class="bi bi-view-list"></i> <span class="menuLabel"> Dashboard</span></button></a>
        <a href="/admin/customers"><button type="button" class="btn btn-light sideMenuButton"><i class="bi bi-people-fill"></i><span class="menuLabel"> Customers</span></button></a>
        <a href="/admin/products"><button type="button" class="btn btn-light sideMenuButton"><i class="bi bi-box-seam-fill"></i><span class="menuLabel"> Products</span></button></a>
        <a href="/admin/orders"><button type="button" class="btn btn-light sideMenuButton"><i class="bi bi-receipt"></i><span class="menuLabel"> Orders</span></button></a>
        <a href="/admin/coupons"><button type="button" class="btn btn-light sideMenuButton"><i class="bi bi-ticket-perforated-fill"></i><span class="menuLabel"> Coupen Management</span></button></a>
        <a href="/admin/salesReport"><button type="button" class="btn btn-light sideMenuButton"><i class="bi bi-journal-bookmark"></i><span class="menuLabel"> Sales Report</span></button></a>
        <a href="/admin/category"><button type="button" class="btn btn-light sideMenuButton"><i class="bi bi-collection-fill"></i><span class="menuLabel"> Catagory</span></button></a>
        <a href="/admin/offers"><button type="button" class="btn btn-light sideMenuButton"><i class="bi bi-graph-down-arrow"></i><span class="menuLabel"> Offers</span></button></a>
        <dir class="separator mt-3 pt-5"></dir>
        
        <a href="/admin/logout"><button type="button" class="btn btn-light sideMenuButton"><i class="bi bi-box-arrow-right"></i><span class="menuLabel"> Logout</span></button></a>
    </div>
    <div class="product ms-5 my-5" style="width: 50vw;">
        <div class="productsForm">
            <div class="col-md-4 mb-3" style="width: 30rem;">
                <form action="/admin/addBrand" method="post">
                    <label for="brand" class="form-label">Add New Brand Name (Optional)</label>
                    <input type="text" name="brandName" class="form-control" id="brand" placeholder="Add new brand name" required>
                    <button type="submit" class="btn btn-small btn-primary mt-2" style="margin-left: auto;">Add</button>
                </form>
                <div class="notification text-center text-danger">
                    {{#if brandAddErrorMessage}}
                        <p>{{brandAddErrorMessage}}</p>
                    {{/if}}
                </div>
            </div>
            
            <hr>
            <h3>Add Products</h3>
            <form class="row mt-3" action="/admin/addProduct" method="post" enctype="multipart/form-data">
                <div class="col-md-4 mb-3">
                    <label for="productName" class="form-label">Product Name</label>
                    <input type="text" name="productName" class="form-control" id="productName" required>
                </div>
                <div class="col-md-4 mb-3">
                    <label for="brandName" class="form-label">Brand Name</label>
                    <select id="brandName" name="brandName" class="form-select" required>
                        <option selected>Choose...</option>
                        {{#each brands}}
                            <option value="{{this._id}}">{{this.brandName}}</option>
                        {{/each}}
                    </select>
                </div>
                
                <div class="col-12 mb-3">
                    <label for="productDescription" class="form-label">Product Description</label>
                    <textarea class="form-control" name="description" id="productDescription" rows="3" required></textarea>
                </div>
                <div class="col-md-4 mb-3">
                    <label for="gender" class="form-label">Gender</label>
                    <select name="gender" id="gender" class="form-select" required>
                        <option selected>Choose...</option>
                        <option value="male">Male</option>
                        <option value="female">Female</option>
                        <option value="unisex">Unisex</option>
                    </select>
                </div>
                <div class="col-md-4 mb-3">
                    <label for="price" class="form-label">Price</label>
                    <input type="text" name="price" class="form-control" id="price" onchange="preventNegative(this)" required>
                </div>
                <div class="col-md-4 mb-3">
                    <label for="offerPrice" class="form-label">Offer Price</label>
                    <input type="text" name="offerPrice" class="form-control" id="offerPrice" onchange=" priceCheck(this)" required>
                </div>
                <div class="col-md-4 mb-3">
                    <label for="size" class="form-label">Size</label>
                    <select id="size" name="size" class="form-select" required>
                        <option selected>Choose...</option>
                        <option value="S">S</option>
                        <option value="M">M</option>
                        <option value="L">L</option>
                        <option value="XL">XL</option>
                    </select>
                    {{!-- <input type="text" name="size" class="form-control" id="size"> --}}
                </div>
                <div class="col-md-4 mb-3">
                    <label for="color" class="form-label">Color</label>
                    <input type="text" name="color" class="form-control" id="color" required>
                </div>
                <div class="col-md-4 mb-3">
                    <label for="stock" class="form-label">Total number of stock</label>
                    <input type="text" name="stock" class="form-control" id="stock" onchange="preventNegative(this)" required>
                </div>
                <div class="col-md-4 mb-3">
                    <label for="category" class="form-label">Category</label>
                    <select id="category" name="category" class="form-select" required>
                        <option selected>Choose...</option>
                        {{#each categories}}
                            <option value="{{this._id}}">{{this.catagoryName}}</option>
                        {{/each}}
                    </select>
                </div>
                <div class="mb-3 col-md-8 mb-3">
                    <label for="images" class="form-label">Upload images (Max. 5 images only)</label>
                    <input class="form-control" accept="image/png,image/jpeg,image/jpg" name="images" type="file" id="images" onchange="countImage(event);previewImage(event);" multiple required>
                </div>
                <div class="col-12 mb-3">
                    <button type="submit" class="btn btn-primary">Add Product</button>
                </div>
                <hr>
            </form>
            <h5 class="text-center" >Selected images</h5>
            <div class="d-flex flex-wrap" id="imgPreviewContainer" style="background-color: white;">
                
            </div>
            <div class="notification text-center text-danger">
                {{#if message}}
                    <p>{{message}}</p>
                {{/if}}
            </div>
        </div>
    </div>
</div> 

<script>
    //preventing entering negative values 
    function preventNegative(input){
        if(parseFloat(input.value)<0){
            input.setCustomValidity('Value cannot be negative');
        }else{
            input.setCustomValidity('');
        }
    }

    //checking offer-price is greater than original price
    function priceCheck(input){
        const originalPrice = document.getElementById('price');
        if(parseFloat(input.value)>parseFloat(originalPrice.value)){
            input.setCustomValidity('Offer price should be less than normal price');
        }else if(parseFloat(input.value)<0){
            input.setCustomValidity('Price value should be positive');
        }else{
            input.setCustomValidity('');
        }
    }

    function previewImage(event){
        const fileInput = event.target;
        const files = event.target.files;
        //checking file type
        for(const file of files){
            const fileType = file.type;
            if(fileType!=='image/jpeg' && fileType!=='image/png' && fileType!=='image/jpg'){
                alert("Only image files are allowed...!");
                fileInput.value = '';
                break;
            }
        }
        //for showing selected images
        const previewImgContainer = document.getElementById('imgPreviewContainer');
        previewImgContainer.innerHTML = null;
        for(let i=0;i<files.length;i++){
            const file = files[i];
            const reader = new FileReader();
            reader.onload = function(e){
                const divElement = document.createElement('div');
                const imageElement = document.createElement('img');
                imageElement.src = e.target.result;
                imageElement.style.maxWidth = '200px';
                imageElement.style.maxHeight = '200px';
                imageElement.style.margin = '20px';
                
                const buttonElement = document.createElement('button');
                buttonElement.textContent = "Delete";
                buttonElement.classList = 'btn btn-danger btn-small ms-4 mb-3';
                buttonElement.addEventListener('click',function(){
                    const inputElement = document.getElementById('images');
                    //converting fileList object to an array
                    const fileList = Array.from(inputElement.files);
                    fileList.splice(i,1);
                    //creating a new fileList object after removing the specified file
                    const newFileList = new DataTransfer();
                    fileList.forEach(file => {
                        newFileList.items.add(file);
                    });
                    inputElement.files = newFileList.files;

                    previewImgContainer.removeChild(divElement);
                })
                
                divElement.appendChild(imageElement);
                divElement.appendChild(buttonElement);
                previewImgContainer.appendChild(divElement);
            }
            reader.readAsDataURL(file);
        };
    }   
    //counting image
    function countImage(event){
        const maxImage = 5;
        const input = event.target;
        if(input.files.length>maxImage){
            alert("You can upload maximun of 5 images only!!!");
            input.value = '';
        }
    }
</script>